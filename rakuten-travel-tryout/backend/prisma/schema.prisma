// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// https://www.prisma.io/docs/concepts/components/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./erd.svg"
  theme    = "forest"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Log {
  id          Int      @id @default(autoincrement())
  name        String   @default("")
  description String   @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  serverity   String   @default("")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  valid     Boolean   @default(true)
  Profile   Profile[]
  lastlogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
}

model HotelOperator {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  valid     Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String
  content     String?
  published   Boolean    @default(false)
  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int
  views       Int        @default(0)
  likes       Int        @default(0)
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

model Profile {
  id              Int     @id @default(autoincrement())
  title           String
  content         String?
  published       Boolean @default(false)
  author          User    @relation(fields: [authorId], references: [id])
  authorId        Int
  views           Int     @default(0)
  likes           Int     @default(0)
  hotelOperatorId Int?
}

model HotelInfo {
  id                   Int             @id @default(autoincrement())
  // body
  email                String          @unique
  name                 String?
  address              String          @default("")
  access               String          @default("")
  description          String          @default("")
  short_description    String          @default("")
  check_in_time        String          @default("")
  check_out_time       String          @default("")
  no_of_rooms          String          @default("10")
  tel                  String          @default("")
  fax                  String          @default("")
  enabled              Boolean         @default(true)
  views                Int             @default(0)
  likes                Int             @default(0)
  images               String          @default("")
  accommodation_notice String          @default("")
  posts                Post[]
  facilities           Facility[]
  awards               Awards[]
  covin_practice       CovinPractice[]
  hotel_type           HotelType[]

  // 評分和評語
  place                    Int @default(5)
  facilities_and_equipment Int @default(5)
  services_and_staff       Int @default(5)
  comfort_and_cleanliness  Int @default(5)
  take_a_bath              Int @default(5)
  food                     Int @default(5)

  // rooms and plans
  // rooms    RoomsSetup[]
  // plans    PlanSetup[]
  comments HotelComments[]

  // 可用付款方式
  payment_accept PaymentAccept[]

  // 支援語言
  language_accept LanguageAccept[]

  plans PlanOnHotel[]
  rooms RoomOnHotel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CurrencyOption {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  location  String?
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Services {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  location  String?
  type      String?
  enabled   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  enabled   Boolean  @default(true)
  deleted   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 支援語言
model LanguageAccept {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  enabled     Boolean    @default(true)
  deleted     Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

// 可用付款方式
model PaymentAccept {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

model HotelType {
  id          Int        @id @default(autoincrement())
  name        String
  description String     @default("")
  enabled     Boolean    @default(true)
  deleted     Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

model HotelFacility {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  enabled     Boolean  @default(true)
  deleted     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Facility {
  id          Int        @id @default(autoincrement())
  name        String
  description String     @default("")
  deleted     Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

model Awards {
  id          Int        @id @default(autoincrement())
  name        String
  image       String     @default("")
  description String     @default("")
  deleted     Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

model Tags {
  id   Int     @id @default(autoincrement())
  name String?
}

model RecommendedLocation {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @default("")
  deleted     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  description String       @default("")
  deleted     Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permission  Permission[]
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @default("")
  deleted     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Role        Role?    @relation(fields: [roleId], references: [id])
  roleId      Int?
}

model CovinPractice {
  id          Int        @id @default(autoincrement())
  name        String
  description String     @default("")
  deleted     Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

// plans

model HotelComments {
  id Int @id @default(autoincrement())

  // comments body
  name     String
  author   String @default("")
  date     String @default("")
  age      String @default("")
  location String @default("")
  type     String @default("")
  content  String @default("")
  report   Int    @default(0)
  helpful  Int    @default(0)

  // customer review
  place                    Int @default(5)
  facilities_and_equipment Int @default(5)
  services_and_staff       Int @default(5)
  comfort_and_cleanliness  Int @default(5)
  take_a_bath              Int @default(5)
  food                     Int @default(5)

  // reply
  reply CommentReply[]

  // background field
  deleted     Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  HotelInfo   HotelInfo? @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int?
}

model CommentReply {
  id              Int            @id @default(autoincrement())
  name            String         @default("")
  author          String         @default("")
  date            String         @default("")
  content         String         @default("")
  deleted         Boolean        @default(false)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  HotelComments   HotelComments? @relation(fields: [hotelCommentsId], references: [id])
  hotelCommentsId Int?
}

model PlanSetup {
  id                Int           @id @default(autoincrement())
  name              String
  images            String        @default("")
  points            String        @default("")
  description       String        @default("")
  price_value       String        @default("")
  price_description String        @default("")
  rooms             PlanOnRooms[]
  PlanOnHotel       PlanOnHotel[]
}

model RoomSetup {
  id          Int           @id @default(autoincrement())
  name        String
  points      String        @default("")
  plans       PlanOnRooms[]
  RoomOnHotel RoomOnHotel[]
}

model PlanOnRooms {
  plan   PlanSetup @relation(fields: [planId], references: [id])
  planId Int // relation scalar field (used in the `@relation` attribute above)
  room   RoomSetup @relation(fields: [roomId], references: [id])
  roomId Int // relation scalar field (used in the `@relation` attribute above)

  assignedAt DateTime @default(now())
  assignedBy String

  @@id([planId, roomId])
}

model PlanOnHotel {
  plan        PlanSetup @relation(fields: [planId], references: [id])
  planId      Int // relation scalar field (used in the `@relation` attribute above)
  hotelInfo   HotelInfo @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int // relation scalar field (used in the `@relation` attribute above)

  assignedAt DateTime @default(now())
  assignedBy String

  @@id([planId, hotelInfoId])
}

model RoomOnHotel {
  room        RoomSetup @relation(fields: [roomId], references: [id])
  roomId      Int // relation scalar field (used in the `@relation` attribute above)
  hotel       HotelInfo @relation(fields: [hotelInfoId], references: [id])
  hotelInfoId Int // relation scalar field (used in the `@relation` attribute above)

  assignedAt DateTime @default(now())
  assignedBy String

  @@id([roomId, hotelInfoId])
}

model PostTest {
  id         Int                    @id @default(autoincrement())
  title      String
  content    String                 @default("123")
  categories CategoriesOnPostTest[]
}

model Category {
  id    Int                    @id @default(autoincrement())
  name  String
  posts CategoriesOnPostTest[]
}

model CategoriesOnPostTest {
  post       PostTest @relation(fields: [postId], references: [id])
  postId     Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
}

model Helloworld {
  id          Int      @id @default(autoincrement())
  name        String
  description String   @default("")
  deleted     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
