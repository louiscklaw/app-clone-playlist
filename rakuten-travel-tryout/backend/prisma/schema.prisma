// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// https://www.prisma.io/docs/concepts/components/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id      Int       @id @default(autoincrement())
  email   String    @unique
  name    String?
  posts   Post[]
  Profile Profile[]
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  views     Int     @default(0)
  likes     Int     @default(0)
}

model Profile {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User    @relation(fields: [authorId], references: [id])
  authorId  Int
  views     Int     @default(0)
  likes     Int     @default(0)
}

model HotelInfo {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  name           String?
  address        String   @default("")
  check_in_time  DateTime @default(now())
  check_out_time DateTime @default(now())
  no_of_rooms    String   @default("10")
  tel            String   @default("")
  fax            String   @default("")
  enabled        Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  // content   String?
  // published Boolean @default(false)
  // author    User    @relation(fields: [authorId], references: [id])
  // authorId  Int
  // views     Int     @default(0)
  // likes     Int     @default(0)
  // User    User?  @relation(fields: [userId], references: [id])
  // userId  Int?
  // User    User?  @relation(fields: [userId], references: [id])
}

model CurrencyOption {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  location String?
}
